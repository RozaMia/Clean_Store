#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã CSS –º–æ–¥—É–ª–µ–π
"""

import os
import re

def check_css_structure():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É CSS –º–æ–¥—É–ª–µ–π"""
    
    modules_dir = os.path.dirname(os.path.abspath(__file__))
    expected_modules = [
        '01-base.css',
        '02-header.css', 
        '03-components.css',
        '04-footer.css',
        '05-home.css',
        '06-catalog.css',
        '07-cart.css',
        '08-responsive.css',
        '09-product-detail.css',
        '10-contact.css',
        '11-auth.css',
        '12-checkout.css'
    ]
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã CSS –º–æ–¥—É–ª–µ–π...")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π
    missing_modules = []
    for module in expected_modules:
        module_path = os.path.join(modules_dir, module)
        if os.path.exists(module_path):
            size = os.path.getsize(module_path)
            print(f"‚úÖ {module} - {size} –±–∞–π—Ç")
        else:
            missing_modules.append(module)
            print(f"‚ùå {module} - –û–¢–°–£–¢–°–¢–í–£–ï–¢")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª
    main_file = os.path.join(os.path.dirname(modules_dir), 'style-modular.css')
    if os.path.exists(main_file):
        size = os.path.getsize(main_file)
        print(f"‚úÖ style-modular.css - {size} –±–∞–π—Ç")
    else:
        print(f"‚ùå style-modular.css - –û–¢–°–£–¢–°–¢–í–£–ï–¢")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º README
    readme_file = os.path.join(modules_dir, 'README.md')
    if os.path.exists(readme_file):
        size = os.path.getsize(readme_file)
        print(f"‚úÖ README.md - {size} –±–∞–π—Ç")
    else:
        print(f"‚ùå README.md - –û–¢–°–£–¢–°–¢–í–£–ï–¢")
    
    print("=" * 50)
    
    if missing_modules:
        print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –º–æ–¥—É–ª–∏: {', '.join(missing_modules)}")
        return False
    else:
        print("‚úÖ –í—Å–µ –º–æ–¥—É–ª–∏ –Ω–∞ –º–µ—Å—Ç–µ!")
        return True

def check_imports():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏–º–ø–æ—Ä—Ç—ã –≤ –≥–ª–∞–≤–Ω–æ–º —Ñ–∞–π–ª–µ"""
    
    modules_dir = os.path.dirname(os.path.abspath(__file__))
    main_file = os.path.join(os.path.dirname(modules_dir), 'style-modular.css')
    
    if not os.path.exists(main_file):
        print("‚ùå –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤...")
    print("=" * 50)
    
    with open(main_file, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ò—â–µ–º –≤—Å–µ –∏–º–ø–æ—Ä—Ç—ã
    imports = re.findall(r"@import url\('modules/([^']+)'\);", content)
    
    expected_imports = [
        '01-base.css',
        '02-header.css',
        '03-components.css', 
        '04-footer.css',
        '05-home.css',
        '06-catalog.css',
        '07-cart.css',
        '08-responsive.css',
        '09-product-detail.css',
        '10-contact.css',
        '11-auth.css',
        '12-checkout.css'
    ]
    
    for imp in expected_imports:
        if imp in imports:
            print(f"‚úÖ –ò–º–ø–æ—Ä—Ç {imp}")
        else:
            print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–º–ø–æ—Ä—Ç {imp}")
    
    print("=" * 50)
    
    if len(imports) == len(expected_imports):
        print("‚úÖ –í—Å–µ –∏–º–ø–æ—Ä—Ç—ã –Ω–∞ –º–µ—Å—Ç–µ!")
        return True
    else:
        print(f"‚ùå –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–º–ø–æ—Ä—Ç–æ–≤ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç: {len(imports)}/{len(expected_imports)}")
        return False

def get_statistics():
    """–ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –º–æ–¥—É–ª—è–º"""
    
    modules_dir = os.path.dirname(os.path.abspath(__file__))
    
    print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–æ–¥—É–ª–µ–π...")
    print("=" * 50)
    
    total_lines = 0
    total_size = 0
    
    for filename in sorted(os.listdir(modules_dir)):
        if filename.endswith('.css'):
            filepath = os.path.join(modules_dir, filename)
            with open(filepath, 'r', encoding='utf-8') as f:
                lines = len(f.readlines())
            size = os.path.getsize(filepath)
            
            total_lines += lines
            total_size += size
            
            print(f"{filename:20} - {lines:4} —Å—Ç—Ä–æ–∫, {size:6} –±–∞–π—Ç")
    
    print("-" * 50)
    print(f"{'–ò–¢–û–ì–û':20} - {total_lines:4} —Å—Ç—Ä–æ–∫, {total_size:6} –±–∞–π—Ç")
    print("=" * 50)

if __name__ == "__main__":
    print("üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ CSS –º–æ–¥—É–ª–µ–π Clean Store")
    print("=" * 50)
    
    structure_ok = check_css_structure()
    imports_ok = check_imports()
    get_statistics()
    
    if structure_ok and imports_ok:
        print("\nüéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        exit(0)
    else:
        print("\n‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã!")
        exit(1)
